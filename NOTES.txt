CREATE TABLE grand_prize(id_grandprize INTEGER  PRIMARY KEY AUTOINCREMENT,name_grandprize varchar(40), description_grandprize varchar(200), status_grandprize integer, winner_official_receipt_grandprize varchar(40))

ALTER TABLE grand_prize RENAME TO grand_prize_temp;

CREATE TABLE "grand_prize"(id_grandprize INTEGER  PRIMARY KEY AUTOINCREMENT,name_grandprize varchar(40), description_grandprize varchar(200), status_grandprize integer, winner_official_receipt_grandprize varchar(40) UNIQUE,date_add_grandprize TIMESTAMP
  DEFAULT CURRENT_TIMESTAMP, time_available_from TIMESTAMP, time_available_to TIMESTAMP);
  
  
  <?php
   class MyDB extends SQLite3
   {
      function __construct()
      {
         $this->open('gaisano_game.sqlite');
      }
   }
   $db = new MyDB();
   if(!$db){
      echo $db->lastErrorMsg();
   } else {
      echo "Opened database successfully\n";
   }
?>



/*
var db = openDatabase('mydb', '1.0', 'Test DB', 2 * 1024 * 1024);

db.transaction(function (tx) {
   tx.executeSql('CREATE TABLE IF NOT EXISTS LOGS (id unique, log)');
   tx.executeSql('INSERT INTO LOGS (id, log) VALUES (1, "foobar")');
   tx.executeSql('INSERT INTO LOGS (id, log) VALUES (2, "logmsg")');
});

db.transaction(function (tx) {
   tx.executeSql('SELECT * FROM LOGS', [], function (tx, results) {
      var len = results.rows.length, i;
      msg = "<p>Found rows: " + len + "</p>";
      document.querySelector('#status').innerHTML +=  msg;
	
      for (i = 0; i < len; i++){
         alert(results.rows.item(i).log );
      }
	
   }, null);
});
*/


CREATE TABLE `slotmachine_suppliersnight`.`lucky8_admin` ( `id_lucky8_admin` INT(11) NOT NULL AUTO_INCREMENT , `username_lucky8_admin` VARCHAR(200) NOT NULL , `password_lucky8_admin` VARCHAR(200) NOT NULL , PRIMARY KEY (`id_lucky8_admin`) , UNIQUE (`username_lucky8_admin`) ) ENGINE = InnoDB;

CREATE TABLE `slotmachine_suppliersnight`.`4` ( `store_time_start` TIME NULL , `store_time_end` TIME NULL , `playable_duration` INT NULL , `playable_times` INT NULL ) ENGINE = InnoDB;


/*	
	//example: isValidDate('2015-08-08','yyyy-mm-dd');
var isValidDate = function (value, userFormat) {
  var  userFormat = userFormat || 'mm/dd/yyyy', // default format

  delimiter = /[^mdy]/.exec(userFormat)[0],
  theFormat = userFormat.split(delimiter),
  theDate = value.split(delimiter),

  isDate = function (date, format) {
    var m, d, y
    for (var i = 0, len = format.length; i < len; i++) {
      if (/m/.test(format[i])) m = date[i]
      if (/d/.test(format[i])) d = date[i]
      if (/y/.test(format[i])) y = date[i]
    }
    return (
      m > 0 && m < 13 &&
      y && y.length === 4 &&
      d > 0 && d <= (new Date(y, m, 0)).getDate()
    )
  }

  return isDate(theDate, theFormat)

}
*/